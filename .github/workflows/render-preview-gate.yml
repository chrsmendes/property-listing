name: Render Preview Gate

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  wait-for-render:
    name: Wait for Render Preview
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Wait for Render deployment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Aguardando deployment do Render para PR #${{ github.event.pull_request.number }}..."

          attempt=1
          max_attempts=30

          while [ $attempt -le $max_attempts ]; do
            deployment_status=$(gh api repos/${{ github.repository }}/deployments \
              --jq '[.[] | select(.ref == "${{ github.event.pull_request.head.sha }}")] | first' | jq -r '.statuses_url')

            if [ "$deployment_status" != "null" ]; then
              state=$(gh api "$deployment_status" --jq '.[0].state')
              url=$(gh api "$deployment_status" --jq '.[0].environment_url')
              if [ "$state" = "success" ]; then
                echo "‚úÖ Deployment conclu√≠do com sucesso!"
                echo "üîó Preview URL: $url"
                exit 0
              elif [ "$state" = "failure" ] || [ "$state" = "error" ]; then
                echo "‚ùå Deployment falhou com status: $state"
                exit 1
              fi
            fi

            echo "‚è≥ Tentativa $attempt/$max_attempts - Status: ${state:-pending}"
            sleep 30
            attempt=$((attempt + 1))
          done

          echo "‚è±Ô∏è Timeout aguardando deployment do Render"
          exit 1
